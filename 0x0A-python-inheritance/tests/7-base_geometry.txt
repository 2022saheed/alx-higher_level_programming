=============================
How to Use 7-base_geometry.py
=============================

This modules defines a base geometry class BaseGeometry.

Instantiation
=============

``BaseGeometry`` includes no attributes, and accordingly is initialized 
with no arguments.

::

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()
    >>> type(bg)
    <class '7-base_geometry.BaseGeometry'>

Methods
=======

``BaseGeometry`` features two methods - ``area(self)`` and 
``integer_validator(self, name, value)``. ``area(...)`` is not yet
implemented.

::

    >>> bg = BaseGeometry()
    >>> print(bg.area) # doctest: +ELLIPSIS, +NORMALIZE_WHITESPACE
    <bound method BaseGeometry.area of <7-base_geometry.BaseGeometry 
     object at...>>

::

    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

The second method, ``integer_validator(...)``, validates the integer value
of a paramter. The first parameter, ``name``, is the name of the argument to
check. The second argument, ``value``, is the argument to check.

::

    >>> print(bg.integer_validator) # doctest: +ELLIPSIS, +NORMALIZE_WHITESPACE
    <bound method BaseGeometry.integer_validator of <7-base_geometry.BaseGeometry 
    object at...>>

if ``value`` is not an integer, a ``TypeError`` is raised.

::

    >>> bg.integer_validator("invalid number", "number")
    Traceback (most recent call last):
    TypeError: invalid number must be an integer

If ``value`` is an integer, but less than or equal to zero, a ValueError
is raised.

::

    >>> bg.integer_validator("invalid int", -1)
    Traceback (most recent call last):
    ValueError: invalid int must be greater than 0

::

    >>> bg.integer_validator("invalid int", 0)
    Traceback (most recent call last):
    ValueError: invalid int must be greater than 0

The method assumes the paramter ``name`` will be a string, but ``name`` of any
type will be printed.

::

    >>> bg.integer_validator({"a": 1}, (1, 2))
    Traceback (most recent call last):
    TypeError: {'a': 1} must be an integer
